//This file is generated by the AxiomREPL. DO NOT DIRECTLY EDIT THIS FILE!
//To make changes, go to https://repl.axiom.xyz/ and export a new circuit.
//
//                 _                 _____  ______ _____  _
//     /\         (_)               |  __ \|  ____|  __ \| |
//    /  \   __  ___  ___  _ __ ___ | |__) | |__  | |__) | |
//   / /\ \  \ \/ / |/ _ \| '_ ` _ \|  _  /|  __| |  ___/| |
//  / ____ \  >  <| | (_) | | | | | | | \ \| |____| |    | |____
// /_/    \_\/_/\_\_|\___/|_| |_| |_|_|  \_\______|_|    |______|
//
//

import {
  Halo2Lib,
  AxiomData,
  CircuitValue
} from "@axiom-crypto/experimental/halo2-js";
import { CircuitValue256 } from "@axiom-crypto/experimental/v2/circuit/CircuitValue256";
const defaultInputs = {
  sender: "0xE300843e7Ee3Bbf74b051138564dA6AD81044F1a",
  recipient: "0x231Ae5AdCcC2dbfF1B457CAf2A3A74Ac7DDC960E",
  txBlockNumber0: 9946925,
  txIdx0: 3,
  txBlockNumber1: 9946927,
  txIdx1: 1,
  logIdx: 0
};
type CircuitInputType = typeof defaultInputs;
export interface CircuitInputs extends CircuitInputType {}
export interface CircuitValueInputs {
  sender: CircuitValue;
  recipient: CircuitValue;
  txBlockNumber0: CircuitValue;
  txIdx0: CircuitValue;
  txBlockNumber1: CircuitValue;
  txIdx1: CircuitValue;
  logIdx: CircuitValue;
}
const circuitFn = async (
  halo2Lib: Halo2Lib,
  axiomData: AxiomData,
  {
    sender,
    recipient,
    txBlockNumber0,
    txIdx0,
    txBlockNumber1,
    txIdx1,
    logIdx
  }: CircuitValueInputs
) => {
  const { add, or, log } = halo2Lib;
  const { getReceipt, getTx, addToCallback } = axiomData;
  //
  //                 _                 _____  ______ _____  _
  //     /\         (_)               |  __ \|  ____|  __ \| |
  //    /  \   __  ___  ___  _ __ ___ | |__) | |__  | |__) | |
  //   / /\ \  \ \/ / |/ _ \| '_ ` _ \|  _  /|  __| |  ___/| |
  //  / ____ \  >  <| | (_) | | | | | | | \ \| |____| |    | |____
  // /_/    \_\/_/\_\_|\___/|_| |_| |_|_|  \_\______|_|    |______|
  //
  //

  // eventSchema = "0x" + keccak(Transfer(address, address, uint256))
  const eventSchema =
    "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef";

  let tx0 = getTx(txBlockNumber0, txIdx0); // mint tx - sender
  let tx1 = getTx(txBlockNumber1, txIdx1); // mint tx - recipient

  let rec0 = getReceipt(txBlockNumber0, txIdx0); // mint tx receipt - sender
  let rec1 = getReceipt(txBlockNumber1, txIdx1); // mint tx receipt - recipient

  // tx "to" address i.e., NFT contract (these should be equal)
  let txTo0 = tx0.to();
  let txTo1 = tx1.to();

  let topic00 = rec0.log(logIdx).topic(1, eventSchema); // sender address for transfer (should be address(0))
  let topic01 = rec0.log(logIdx).topic(2, eventSchema); // recipient address for transfer (should be highfive sender)

  let topic10 = rec1.log(logIdx).topic(1, eventSchema); // sender address for transfer (should be address(0))
  let topic11 = rec1.log(logIdx).topic(2, eventSchema); // recipient address for transfer (should be highfive recipient)

  addToCallback(txTo0);
  addToCallback(txTo1);
  addToCallback(topic00);
  addToCallback(topic01);
  addToCallback(topic10);
  addToCallback(topic11);
};
const config = {
  k: 13,
  numAdvice: 4,
  numLookupAdvice: 1,
  numInstance: 1,
  numLookupBits: 12,
  numVirtualInstance: 2
};
const vk = [
  2,
  13,
  0,
  0,
  0,
  0,
  6,
  0,
  0,
  0,
  22,
  53,
  175,
  191,
  189,
  44,
  47,
  125,
  102,
  223,
  68,
  183,
  53,
  24,
  221,
  245,
  11,
  40,
  210,
  84,
  147,
  34,
  241,
  111,
  251,
  44,
  176,
  97,
  40,
  23,
  111,
  5,
  236,
  172,
  54,
  30,
  205,
  68,
  139,
  37,
  34,
  255,
  110,
  222,
  63,
  213,
  167,
  105,
  46,
  125,
  148,
  2,
  105,
  228,
  6,
  175,
  114,
  9,
  31,
  238,
  182,
  133,
  168,
  45,
  254,
  208,
  57,
  68,
  2,
  36,
  61,
  73,
  48,
  34,
  247,
  236,
  26,
  227,
  15,
  38,
  112,
  60,
  7,
  56,
  64,
  130,
  118,
  209,
  217,
  68,
  158,
  194,
  137,
  123,
  171,
  16,
  184,
  14,
  114,
  168,
  167,
  129,
  64,
  66,
  19,
  49,
  43,
  233,
  162,
  34,
  89,
  150,
  55,
  9,
  182,
  69,
  82,
  41,
  228,
  22,
  78,
  106,
  238,
  124,
  182,
  107,
  226,
  17,
  226,
  37,
  100,
  176,
  146,
  239,
  28,
  228,
  194,
  218,
  247,
  138,
  60,
  168,
  6,
  144,
  55,
  66,
  6,
  86,
  91,
  239,
  155,
  97,
  194,
  110,
  13,
  18,
  154,
  139,
  47,
  31,
  11,
  224,
  179,
  221,
  99,
  178,
  88,
  86,
  206,
  8,
  150,
  169,
  91,
  253,
  228,
  169,
  165,
  164,
  157,
  43,
  13,
  174,
  224,
  45,
  101,
  21,
  132,
  151,
  185,
  7,
  80,
  30,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  0,
  177,
  198,
  250,
  165,
  10,
  155,
  239,
  152,
  235,
  63,
  196,
  245,
  29,
  42,
  29,
  16,
  218,
  37,
  167,
  54,
  141,
  201,
  112,
  65,
  146,
  81,
  250,
  103,
  238,
  100,
  3,
  10,
  133,
  174,
  235,
  251,
  127,
  85,
  36,
  96,
  255,
  230,
  157,
  159,
  99,
  142,
  164,
  57,
  163,
  65,
  168,
  229,
  51,
  208,
  18,
  197,
  150,
  147,
  180,
  27,
  226,
  186,
  1,
  15,
  16,
  217,
  239,
  166,
  134,
  145,
  8,
  64,
  130,
  254,
  217,
  121,
  179,
  77,
  182,
  13,
  242,
  230,
  11,
  182,
  16,
  69,
  155,
  127,
  217,
  245,
  216,
  178,
  191,
  213,
  87,
  6,
  148,
  99,
  159,
  170,
  30,
  92,
  154,
  235,
  66,
  49,
  211,
  250,
  46,
  44,
  218,
  107,
  163,
  184,
  99,
  37,
  146,
  251,
  210,
  213,
  89,
  11,
  251,
  65,
  41,
  177,
  196,
  33,
  129,
  32,
  221,
  160,
  2,
  15,
  131,
  249,
  95,
  54,
  190,
  51,
  37,
  210,
  75,
  10,
  123,
  164,
  170,
  220,
  46,
  2,
  32,
  0,
  126,
  162,
  161,
  23,
  118,
  254,
  8,
  8,
  145,
  202,
  133,
  199,
  119,
  206,
  57,
  43,
  71,
  250,
  177,
  202,
  247,
  247,
  49,
  208,
  24,
  55,
  134,
  206,
  167,
  14,
  195,
  5,
  67,
  75,
  229,
  119,
  93,
  216,
  75,
  48,
  129,
  127,
  109,
  132,
  109,
  219,
  168,
  23,
  159,
  8,
  162,
  147,
  15,
  247,
  240,
  86,
  108,
  80,
  248,
  240,
  65,
  159,
  237,
  247,
  215,
  190,
  191,
  70,
  240,
  218,
  95,
  15,
  139,
  84,
  196,
  177,
  252,
  158,
  196,
  233,
  173,
  21,
  59,
  139,
  120,
  126,
  241,
  79,
  176,
  156,
  21,
  225,
  98,
  163,
  218,
  200,
  210,
  106,
  88,
  71,
  32,
  119,
  134,
  30,
  248,
  17,
  160,
  55,
  121,
  168,
  124,
  85,
  5,
  232,
  156,
  11,
  224,
  89,
  116,
  78,
  181,
  45,
  120,
  198,
  223,
  203,
  156,
  189,
  160,
  140,
  117,
  105,
  10,
  53,
  212,
  37,
  140,
  202,
  224,
  95,
  204,
  114,
  5,
  234,
  227,
  19,
  84,
  3,
  218,
  83,
  80,
  10,
  207,
  66,
  72,
  41,
  104,
  80,
  210,
  173,
  6,
  147,
  3,
  3,
  204,
  9,
  218,
  43,
  174,
  194,
  117,
  30,
  170,
  200,
  139,
  75,
  207,
  121,
  105,
  204,
  163,
  229,
  71,
  190,
  189,
  137,
  61,
  63,
  117,
  26,
  188,
  5,
  138,
  247,
  97,
  182,
  70,
  171,
  242,
  29,
  174,
  247,
  17,
  195,
  148,
  156,
  111,
  89,
  153,
  156,
  248,
  208,
  177,
  44,
  124,
  37,
  103,
  0,
  230,
  236,
  103,
  53,
  4,
  151,
  11,
  186,
  176,
  118,
  194,
  218,
  216,
  31,
  76,
  157,
  103,
  124,
  45,
  225,
  139,
  131,
  250,
  28,
  33,
  143,
  94,
  245,
  65,
  207,
  25,
  100,
  169,
  13,
  186,
  143,
  228,
  217,
  166,
  255,
  182,
  193,
  205,
  237,
  128,
  19,
  153,
  183,
  147,
  111,
  83,
  204,
  165,
  132,
  214,
  33,
  158,
  116,
  194,
  176,
  101,
  150,
  100,
  186,
  247,
  69,
  185,
  58,
  224,
  149,
  139,
  17,
  120,
  35,
  72,
  89,
  9,
  32
];
export const circuit = Object.freeze({
  circuit: circuitFn,
  config,
  defaultInputs,
  vk
});
